name: "Manage Stale Issues, PRs & Unmerged Branches"

on:
  schedule:
    - cron: '30 1 * * *'  # Runs daily at 1:30 AM UTC
  workflow_dispatch:  # Allows manual triggering

permissions:
  contents: write
  issues: write
  pull-requests: write

jobs:
  stale:
    runs-on: ubuntu-latest
    steps:
      - name: Mark Stale Issues and PRs
        uses: actions/stale@v9
        with:
          stale-issue-message: "This issue is stale because it has been open 180 days with no activity. Remove stale label or comment, or it will be closed in 30 days."
          stale-pr-message: "This PR is stale because it has been open 180 days with no activity. Please update or it will be closed in 30 days."
          days-before-stale: 180
          days-before-close: 30
          exempt-issue-labels: "keep"
          exempt-pr-labels: "keep"

  list-stale-branches:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch full history for accurate branch checks

      - name: Fetch All Branches
        run: git fetch --all --prune

      - name: Identify Stale Merged Branches
        run: |
          echo "Branch,Last Commit Date" > stale-branches-report.csv
          
          echo "Checking merged branches with no activity in the last 5 days..."
          for branch in $(git for-each-ref --format '%(refname:short) %(committerdate:iso8601)' refs/remotes/origin | awk -v date=$(date -d '5 days ago' +%s) '$2 < date {print $1,$2}'); do
            if [[ "$branch" != "origin/main" && "$branch" != "origin/dev" ]]; then
              branch_name=${branch#origin/}
              last_commit_date=$(git log -1 --format=%ci "$branch")
              echo "$branch_name,$last_commit_date" >> stale-branches-report.csv
            fi
          done

      - name: Identify Merged PR Branches Older Than 5 Days
        run: |
          echo "Checking PR branches merged into main or dev for 5+ days..."
          for branch in $(gh api repos/${{ github.repository }}/pulls --jq '.[] | select(.merged_at != null and (.base.ref == "main" or .base.ref == "dev")) | select(.merged_at | fromdateiso8601 < (now - 432000)) | .head.ref'); do
            last_commit_date=$(git log -1 --format=%ci origin/$branch || echo "Unknown")
            echo "$branch,$last_commit_date" >> stale-branches-report.csv
          done
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Stale Branch Report
        uses: actions/upload-artifact@v4
        with:
          name: stale-branches-report
          path: stale-branches-report.csv
          retention-days: 30
