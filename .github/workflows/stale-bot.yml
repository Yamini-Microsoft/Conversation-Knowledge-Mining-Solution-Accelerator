name: "Manage Stale Issues, PRs & Unmerged Branches"

on:
  schedule:
    - cron: '30 1 * * *'  # Runs daily at 1:30 AM UTC
  workflow_dispatch:  # Allows manual triggering

permissions:
  contents: write
  issues: write
  pull-requests: write

jobs:
  stale:
    runs-on: ubuntu-latest
    steps:
      - name: Mark Stale Issues and PRs
        uses: actions/stale@v9
        with:
          stale-issue-message: "This issue is stale because it has been open 180 days with no activity. Remove stale label or comment, or it will be closed in 30 days."
          stale-pr-message: "This PR is stale because it has been open 180 days with no activity. Please update or it will be closed in 30 days."
          days-before-stale: 180
          days-before-close: 30
          exempt-issue-labels: "keep"
          exempt-pr-labels: "keep"

  list-branches:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch full history for accurate branch checks

      - name: Fetch All Branches
        run: git fetch --all --prune

      - name: Generate Branch List CSV
        run: |
          echo "Branch,Status,Last Activity" > branches.csv

          # Active branches older than 2 days
          for branch in $(git for-each-ref --format '%(refname:short) %(committerdate:unix)' refs/remotes/origin | awk -v date=$(date -d '2 days ago' +%s) '$2 < date {print $1}'); do
            if [[ "$branch" != "origin/main" && "$branch" != "origin/dev" ]]; then
              branch_name=${branch#origin/}
              last_activity=$(git log -1 --format="%ci" $branch_name)
              echo "$branch_name,Active (older than 2 days),$last_activity" >> branches.csv
            fi
          done

          # Merged branches with no activity in last 3 months
          for branch in $(git for-each-ref --format '%(refname:short) %(committerdate:unix)' refs/remotes/origin | awk -v date=$(date -d '3 months ago' +%s) '$2 < date {print $1}'); do
            if [[ "$branch" != "origin/main" && "$branch" != "origin/dev" ]]; then
              branch_name=${branch#origin/}
              last_activity=$(git log -1 --format="%ci" $branch_name)
              echo "$branch_name,Merged (inactive),$last_activity" >> branches.csv
            fi
          done

          # PR Approved and Merged Branches Older Than 30 Days
          for branch in $(gh api repos/${{ github.repository }}/pulls --jq '.[] | select(.merged_at != null and (.base.ref == "main" or .base.ref == "dev")) | select(.merged_at | fromdateiso8601 < (now - 2592000)) | .head.ref'); do
            last_activity=$(git log -1 --format="%ci" $branch)
            echo "$branch,Merged PR,$last_activity" >> branches.csv
          done

          # Open PR Branches
          for branch in $(gh api repos/${{ github.repository }}/pulls --jq '.[] | select(.state == "open") | .head.ref'); do
            last_activity=$(git log -1 --format="%ci" $branch)
            echo "$branch,Open PR,$last_activity" >> branches.csv
          done

      - name: Upload Branch List CSV
        uses: actions/upload-artifact@v4
        with:
          name: stale-branches-report
          path: branches.csv
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
