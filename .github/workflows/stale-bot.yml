name: "Manage Active Issues, PRs & Branches"

on:
  schedule:
    - cron: '30 1 * * *'  # Runs daily at 1:30 AM UTC
  workflow_dispatch:  # Allows manual triggering

permissions:
  contents: write
  issues: write
  pull-requests: write

jobs:
  active-branches:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch full history for accurate branch checks

      - name: Fetch All Branches
        run: git fetch --all --prune

      - name: Create CSV File
        run: echo "Branch,Last Commit Date,Merged Into,Status" > active-branches-report.csv

      - name: Identify & List Active Branches with No Activity in Last 2 Weeks
        run: |
          echo "Checking branches with no activity in the last 2 weeks..."
          for branch_info in $(git for-each-ref --format '%(refname:short) %(committerdate:unix)' refs/remotes/origin | awk -v date=$(date -d '2 weeks ago' +%s) '$2 < date {print $1","$2}'); do
            branch=$(echo $branch_info | cut -d',' -f1)

            # Get last commit date in YYYY-MM-DD format
            last_commit_date=$(git log -1 --format=%cd --date=format:'%Y-%m-%d' origin/$branch 2>/dev/null || echo "Unknown")

            # Get merged into branch (if applicable)
            merged_into=$(git branch -r --contains origin/$branch | grep -E 'origin/main|origin/dev' | awk -F'/' '{print $NF}' | tr '\n' ',' | sed 's/,$//')
            merged_into=${merged_into:-"Unknown"}

            echo "$branch,$last_commit_date,$merged_into,Inactive" >> active-branches-report.csv
          done

      - name: Identify & List PR Approved & Merged Branches (Older Than 2 Weeks)
        run: |
          echo "Checking PR branches that were approved and merged more than 2 weeks ago..."
          for branch_info in $(gh api repos/${{ github.repository }}/pulls --jq '.[] | select(.merged_at != null and (.base.ref == "main" or .base.ref == "dev")) | select(.merged_at | fromdateiso8601 < (now - 1209600)) | [.head.ref, .merged_at, .base.ref] | @csv'); do
            branch=$(echo $branch_info | awk -F, '{print $1}' | tr -d '"')

            # Get last commit date in YYYY-MM-DD format
            last_commit_date=$(git log -1 --format=%cd --date=format:'%Y-%m-%d' origin/$branch 2>/dev/null || echo "Unknown")

            # Get merged into branch name (not full reference)
            merged_into=$(echo $branch_info | awk -F, '{print $3}' | tr -d '"')

            echo "$branch,$last_commit_date,$merged_into,Inactive" >> active-branches-report.csv
          done
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Active Branch Report
        uses: actions/upload-artifact@v4
        with:
          name: active-branches-report
          path: active-branches-report.csv
          retention-days: 30
